package admin

import (
	"github.com/datasektionen/logout/pkg/config"
	"github.com/datasektionen/logout/pkg/database"
	"github.com/datasektionen/logout/pkg/templates"
	"github.com/datasektionen/logout/services/static"
	"strconv"
	"time"
)

templ admin() {
	@page()
}

templ members() {
	@page() {
		<div class="p-8">
			<div id="membership-upload"></div>
			<script type="module" src="/dist/membershipUpload.island.js"></script>
		</div>
	}
}

templ oidcClients() {
	@page() {
		<div class="p-8">
			<div id="oidc-clients"></div>
			<script type="module" src="/dist/oidcClients.island.js"></script>
		</div>
	}
}

var input = `
	border border-neutral-500 grow
	outline-none focus:border-cerise-strong hover:border-cerise-light
	bg-slate-800 p-1.5 rounded h-8
`

var button = `
	bg-[#3f4c66] p-1 h-8 block rounded border text-center
	select-none border-transparent outline-none
	focus:border-cerise-strong hover:border-cerise-light
`

var roundButton = `
	bg-[#3f4c66] shrink-0 h-5 w-5 rounded-full
	grid place-items-center pointer
	border border-transparent outline-none focus:border-cerise-strong hover:border-cerise-light relative
	[&>img]:w-3/5 [&>img]:h-3/5 [&>img]:invert
`

templ invite(invite database.Invite) {
	<li class="grid grid-cols-subgrid col-span-full odd:bg-white/5 p-1">
		<p>{ invite.Name }</p>
		<p>{ strconv.Itoa(int(invite.CurrentUses)) }</p>
		<p>
			if invite.MaxUses.Valid {
				{ strconv.Itoa(int(invite.MaxUses.Int32)) }
			}
		</p>
		<p>{ invite.CreatedAt.Time.Format(time.DateOnly) }</p>
		<p>{ invite.ExpiresAt.Time.Format(time.DateOnly) }</p>
		<div class="flex items-center gap-1">
			<button
				class={ roundButton }
				hx-delete={ "/admin/invites/" + invite.ID.String() }
				hx-target="closest li"
				hx-swap="outerHTML"
			><img src="/public/x.svg"/></button>
			<button
				class={ roundButton }
				onclick={ templ.ComponentScript{Call: templ.SafeScript(
					"navigator.clipboard.writeText",
					config.Config.Origin.String()+"/invite/"+invite.ID.String(),
				)} }
			><img src="/public/clipboard.svg"/></button>
		</div>
	</li>
}

templ invites(invites []database.Invite) {
	@page() {
		<div class="p-8">
			<ul class="grid grid-cols-6 p-2">
				<li class="grid grid-cols-subgrid col-span-full border-b">
					<p>Name</p>
					<p>Uses</p>
					<p>Max uses</p>
					<p>Created at</p>
					<p>Expires at</p>
					<p></p>
				</li>
				for _, inv := range invites {
					@invite(inv)
				}
			</ul>
			<form
				class="flex justify-center items-center gap-2 flex-wrap"
				hx-post="/admin/invites"
				hx-target="previous ul"
				hx-swap="beforeend"
			>
				<div>
					<label for="invite-name">Name:</label>
					<input id="invite-name" required type="text" name="name" class={ input }/>
				</div>
				<div>
					<label for="invite-expires-at">Expires at:</label>
					<input id="invite-expires-at" required type="date" name="expires-at" class={ input }/>
				</div>
				<div>
					<label for="invite-max-uses">Max uses:</label>
					<input id="invite-max-uses" type="number" name="max-uses" class={ input }/>
				</div>
				<button class={ button }>Create</button>
			</form>
		</div>
	}
}

templ page() {
	@templates.Page() {
		<nav class="w-full h-12 bg-gray-700 flex uppercase">
			<div class="h-full aspect-square flex items-center grid place-items-center fill-cerise-regular bg-gray-600">
				@templ.Raw(static.PublicAsString("delta.svg"))
			</div>
			<a class="flex items-center px-3 hover:bg-gray-600 transition-colors" href="/admin/members">Members</a>
			<a class="flex items-center px-3 hover:bg-gray-600 transition-colors" href="/admin/oidc-clients">OIDC Clients</a>
			<a class="flex items-center px-3 hover:bg-gray-600 transition-colors" href="/admin/invites">Invites</a>
		</nav>
		<div class="flex justify-center min-h-[calc(100vh-3rem)]">
			<main class="bg-gray-800 w-[1000px] md:max-w-[calc(100vw-8rem)]">
				{ children... }
			</main>
		</div>
		<script src="https://unpkg.com/htmx.org@2.0.1" integrity="sha384-QWGpdj554B4ETpJJC9z+ZHJcA/i59TyjxEPXiiUgN2WmTyV5OEZWCD6gQhgkdpB/" crossorigin="anonymous"></script>
	}
}
